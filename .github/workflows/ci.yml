# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  Test:
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres
          # Provide the password for postgres
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: abcd136136
            POSTGRES_DB: simple_bank_2
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            # Maps tcp port 5432 on service container to the host
            - 5432:5432

    steps:

    - name: Set up Go
      uses: actions/setup-go@v4
      id: go
      with:
        go-version: '1.20'
    
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: install golang migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-386.tar.gz | tar xvz
        sudo mv migrate.linux-386 /usr/bin/migrate
        which migrate
    
    - name: Run migrateup
      run: make migrateup


    - name: Test
      run: make test
